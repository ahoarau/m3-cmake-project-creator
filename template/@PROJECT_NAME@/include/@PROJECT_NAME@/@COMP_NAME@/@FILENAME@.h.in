/**
 * Part of the M3 realtime control system by Meka Robotics LLC.
 * Copyright (C) Meka Robotics LLC 2011
 * 
 * Author : @AUTHOR@ 
 * 
 * Generated by the m3 project creator @DATE@
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#ifndef @PROJECT_NAME@_@FILENAME_UPPER@_H
#define @PROJECT_NAME@_@FILENAME_UPPER@_H

#include <m3rt/base/component.h>
#include <google/protobuf/message.h>
#include <m3/robots/humanoid.h>
#include "@PROJECT_NAME@/@COMP_NAME@/@FILENAME@.pb.h"

namespace @PROJECT_NAME@
{

class @CLASS_NAME@ : public m3rt::M3Component
{
        public:
                @CLASS_NAME@():m3rt::M3Component(@CONTROL_PRIORITY@),bot(NULL),tmp_cnt(0) 
		{
			RegisterVersion("default",DEFAULT);
		}
                virtual ~@CLASS_NAME@(){}

                google::protobuf::Message * GetCommand(){return &command;}
                google::protobuf::Message * GetStatus(){return &status;}
                google::protobuf::Message * GetParam(){return &param;}

        protected:
                enum {DEFAULT};
                M3BaseStatus * GetBaseStatus(){return status.mutable_base();}
                bool ReadConfig(const char * filename);
                void Startup();
                void Shutdown();
                bool LinkDependentComponents();
                void StepStatus();
                void StepCommand();
                @CLASS_NAME@Status status;
                @CLASS_NAME@Command command;
                @CLASS_NAME@Param param;
        private:
                m3::M3Humanoid * bot;
                std::string robot_name;
                int tmp_cnt;
};
}
#endif
